using System;
using PoECommerce.Core.Model.Enums;
using PoECommerce.Core.Model.Search;

namespace PoECommerce.Core.Model.Trade
{
    public class ListedItem
    {
        public string ListingId { get; set; }
        public Item Item { get; set; }

        public Listing Listing { get; set; }
    }

    public class Listing
    {
        /// <summary>
        ///     Date and time of item being listed.
        /// </summary>
        public DateTime Indexed { get; set; }

        /// <summary>
        ///     Information about the position of the item in the seller's stash.
        /// </summary>
        public Stash Stash { get; set; }

        /// <summary>
        ///     Autogenerated whisper message to buy an item (in the seller's language).
        /// </summary>
        public string Whisper { get; set; }

        /// <summary>
        ///     Account information.
        /// </summary>
        public Account Account { get; set; }

        /// <summary>
        ///     Price information.
        /// </summary>
        public Price Price { get; set; }
    }

    public class Account
    {
        /// <summary>
        ///     Name of the account.
        /// </summary>
        public string Name { get; set; }

        /// <summary>
        ///     Name of the last character the player used on this account.
        /// </summary>
        public string LastCharacterName { get; set; }

        /// <summary>
        ///     Information about the online status. Null if the player is offline.
        /// </summary>
        public OnlineStatus Online { get; set; }

        /// <summary>
        ///     The language the player is using as a default (e.g. "en_US").
        /// </summary>
        public string Language { get; set; }
    }

    public class OnlineStatus
    {
        public bool IsOnline { get; set; }
        public string League { get; set; }
        public string Status { get; set; }
    }

    /// <summary>
    ///     Information about the position of the item in the player's stash.
    /// </summary>
    public class Stash
    {
        /// <summary>
        ///     Name of the stash tab.
        /// </summary>
        public string Name { get; set; }

        /// <summary>
        ///     X (horizontal) position in the stash tab's grid.
        /// </summary>
        public int X { get; set; }

        /// <summary>
        ///     Y (vertical) position in the stash tab's grid.
        /// </summary>
        public int Y { get; set; }
    }

    public class Price
    {
        /// <summary>
        ///     Type of the listed price (~price, ~b/o, ~fixed etc.).
        /// </summary>
        public string Type { get; set; }

        /// <summary>
        ///     The amount of requested currency.
        /// </summary>
        public double? Amount { get; set; }

        /// <summary>
        ///     Name of the requested currency (e.g. "chrom", "fus", "exe" etc.).
        /// </summary>
        public string Currency { get; set; }
    }
}