@using PoECommerce.Client.Shared
@using PoECommerce.Core.Model.Trade
@inherits ItemsContainerBase

@if (TradeSession != null)
{
    if (TradeSession.Result == null || TradeSession.Result.Count == 0 || TradeSession.State == TradeSession.TradeSessionState.ServiceUnavailable)
    {
        if (TradeSession.State != TradeSession.TradeSessionState.New)
        {
            <span>Searching...</span>
        }
        else if (TradeSession.State != TradeSession.TradeSessionState.Pending)
        {
            <span>Loading...</span>
        }
        else if (TradeSession.State == TradeSession.TradeSessionState.Closed)
        {
            <span>No results found</span>
        }
        else
        {
            <span>Service unavailable</span>
        }
    }
    else
    {
        <span>Showing @TradeSession.Result.Count results (@TradeSession.Total matched)</span>

        if (ShowSummary)
        {
            <span>
                @(TradeSession.Query.Text ?? TradeSession.Query.Name + " " + TradeSession.Query.Type)
                @if (TradeSession.Query.OnlineStatus != null)
                {
                    @:&nbsp;|&nbsp;@TradeSession.Query.OnlineStatus.Value
                }
                @if (TradeSession.Query.League != null)
                {
                    @:&nbsp;|&nbsp;@TradeSession.Query.League
                }
            </span>
            <hr />
        }

        if (IsCompact)
        {
            foreach (ListedItem resultItem in TradeSession.Result)
            {
                <CompactListedItemContainer ListedItem="@resultItem"></CompactListedItemContainer>
            }
        }
        else
        {
            foreach (ListedItem resultItem in TradeSession.Result)
            {
                <ListedItemContainer ListedItem="@resultItem"></ListedItemContainer>
            }
        }
    }
}