@page "/Trade"

@using PoECommerce.Client.Shared.Display
@implements IDisposable
@inject IWindowManager WindowManager
@inject ITradeState TradeState

@if (TradeState.IsCompact)
{
    <style>
        body {
            @if (!TradeState.IsVisible)
            {
                @:display: none;
            }
            font-size: smaller;
            overflow: hidden;
            user-select: none;
        }

        .window-task-bar {
            -webkit-app-region: drag;
            background-color: black;
            display: flex;
            flex-direction: row-reverse;
            padding: 3px;
            position: fixed;
            right: 0;
            top: 0;
            width: 100%;
        }

        .window-task-bar button {
            -webkit-app-region: no-drag;
            ;
        }


        .window-content {
            margin-top: 35px;
            max-height: 165px;
            max-width: 500px;
            overflow-x: hidden;
            overflow-y: visible;
        }

        .window-task-bar button {
            height: 15px;
            line-height: 1px;
            max-height: 15px;
            max-width: 15px;
            min-height: 15px;
            min-width: 15px;
            width: 15px;
        }
    </style>
}
else
{
    <style>

        body {
            @if (!TradeState.IsVisible)
            {
                @:display: none;
            }
            overflow: hidden;
            user-select: none;
        }

        .window-task-bar {
            -webkit-app-region: drag;
            background-color: black;
            display: flex;
            flex-direction: row-reverse;
            padding: 3px;
            position: fixed;
            right: 0;
            top: 0;
            width: 100%;
        }

        .window-task-bar button {
            -webkit-app-region: no-drag;
            ;
        }

        .window-content {
            margin-top: 35px;
            max-height: 765px;
            max-width: 800px;
            overflow-x: hidden;
            overflow-y: visible;
        }

        .window-task-bar button {
            height: 15px;
            line-height: 1px;
            max-height: 15px;
            max-width: 15px;
            min-height: 15px;
            min-width: 15px;
            width: 15px;
        }
    </style>
}

@if (TradeState.IsVisible)
{
    <div class="window-task-bar">
        <Button ElementType="@ElementType.Secondary" OnClick="@SwitchMode" Value="♂"></Button>
        <Button OnClick="@(() => WindowManager.Minimize(1))" ElementType="@ElementType.Secondary" Value="_"></Button>
    </div>
    <div class="window-content">
        <TradeContainer IsCompact="@TradeState.IsCompact"></TradeContainer>
    </div>
}

@functions
{

    public bool IsCompact { get; set; }

    public bool IsVisible { get; set; }

    protected void SwitchMode()
    {
        TradeState.IsCompact = !TradeState.IsCompact;
    }

    protected override void OnInitialized()
    {
        TradeState.OnIsVisibleChanged += SetIsVisible;
        TradeState.OnIsCompactChanged += SetIsCompact;
    }

    private async void SetIsVisible(object sender, bool b)
    {
        IsVisible = b;
        await InvokeAsync(StateHasChanged);
    }

    private async void SetIsCompact(object sender, bool b)
    {
        IsCompact = b;
        await InvokeAsync(StateHasChanged);
    }

    public void Dispose()
    {
        TradeState.OnIsVisibleChanged -= SetIsVisible;
        TradeState.OnIsCompactChanged -= SetIsCompact;
    }

}